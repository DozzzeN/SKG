import itertools

import numpy as np

times = 1000000

# a and b为真的所有情况
bools = [[0, 0, 0, 1], [0, 0, 0, 2], [0, 0, 0, 3], [0, 0, 1, 1], [0, 0, 1, 2], [0, 0, 1, 3], [0, 0, 2, 1], [0, 0, 2, 2],
         [0, 0, 2, 3], [0, 0, 3, 1], [0, 0, 3, 2], [0, 0, 3, 3], [0, 1, 0, 0], [0, 1, 1, 0], [0, 1, 1, 2], [0, 1, 1, 3],
         [0, 1, 2, 0], [0, 1, 2, 2], [0, 1, 3, 0], [0, 1, 3, 3], [0, 2, 0, 0], [0, 2, 0, 3], [0, 2, 1, 0], [0, 2, 1, 1],
         [0, 2, 1, 3], [0, 2, 2, 0], [0, 2, 2, 1], [0, 2, 2, 3], [0, 2, 3, 0], [0, 2, 3, 3], [0, 3, 0, 0], [0, 3, 0, 2],
         [0, 3, 1, 0], [0, 3, 1, 1], [0, 3, 1, 2], [0, 3, 2, 0], [0, 3, 2, 2], [0, 3, 3, 0], [0, 3, 3, 1], [0, 3, 3, 2],
         [1, 0, 0, 1], [1, 0, 0, 2], [1, 0, 0, 3], [1, 0, 1, 1], [1, 0, 2, 1], [1, 0, 2, 2], [1, 0, 3, 1], [1, 0, 3, 3],
         [1, 1, 0, 0], [1, 1, 0, 2], [1, 1, 0, 3], [1, 1, 1, 0], [1, 1, 1, 2], [1, 1, 1, 3], [1, 1, 2, 0], [1, 1, 2, 2],
         [1, 1, 2, 3], [1, 1, 3, 0], [1, 1, 3, 2], [1, 1, 3, 3], [1, 2, 0, 0], [1, 2, 0, 1], [1, 2, 0, 3], [1, 2, 1, 1],
         [1, 2, 1, 3], [1, 2, 2, 0], [1, 2, 2, 1], [1, 2, 2, 3], [1, 2, 3, 1], [1, 2, 3, 3], [1, 3, 0, 0], [1, 3, 0, 1],
         [1, 3, 0, 2], [1, 3, 1, 1], [1, 3, 1, 2], [1, 3, 2, 1], [1, 3, 2, 2], [1, 3, 3, 0], [1, 3, 3, 1], [1, 3, 3, 2],
         [2, 0, 0, 1], [2, 0, 0, 2], [2, 0, 0, 3], [2, 0, 1, 1], [2, 0, 1, 2], [2, 0, 2, 1], [2, 0, 2, 2], [2, 0, 3, 1],
         [2, 0, 3, 2], [2, 0, 3, 3], [2, 1, 0, 0], [2, 1, 0, 2], [2, 1, 1, 0], [2, 1, 1, 2], [2, 1, 1, 3], [2, 1, 2, 0],
         [2, 1, 2, 2], [2, 1, 3, 0], [2, 1, 3, 2], [2, 1, 3, 3], [2, 2, 0, 0], [2, 2, 0, 1], [2, 2, 0, 3], [2, 2, 1, 0],
         [2, 2, 1, 1], [2, 2, 1, 3], [2, 2, 2, 0], [2, 2, 2, 1], [2, 2, 2, 3], [2, 2, 3, 0], [2, 2, 3, 1], [2, 2, 3, 3],
         [2, 3, 0, 0], [2, 3, 0, 2], [2, 3, 1, 1], [2, 3, 1, 2], [2, 3, 2, 2], [2, 3, 3, 0], [2, 3, 3, 1], [2, 3, 3, 2],
         [3, 0, 0, 1], [3, 0, 0, 2], [3, 0, 0, 3], [3, 0, 1, 1], [3, 0, 1, 3], [3, 0, 2, 1], [3, 0, 2, 2], [3, 0, 2, 3],
         [3, 0, 3, 1], [3, 0, 3, 3], [3, 1, 0, 0], [3, 1, 0, 3], [3, 1, 1, 0], [3, 1, 1, 2], [3, 1, 1, 3], [3, 1, 2, 0],
         [3, 1, 2, 2], [3, 1, 2, 3], [3, 1, 3, 0], [3, 1, 3, 3], [3, 2, 0, 0], [3, 2, 0, 3], [3, 2, 1, 1], [3, 2, 1, 3],
         [3, 2, 2, 0], [3, 2, 2, 1], [3, 2, 2, 3], [3, 2, 3, 3], [3, 3, 0, 0], [3, 3, 0, 1], [3, 3, 0, 2], [3, 3, 1, 0],
         [3, 3, 1, 1], [3, 3, 1, 2], [3, 3, 2, 0], [3, 3, 2, 1], [3, 3, 2, 2], [3, 3, 3, 0], [3, 3, 3, 1], [3, 3, 3, 2]]

prob = 0

x11 = []
x21 = []
x12 = []
x22 = []
y11 = []
y21 = []
y12 = []
y22 = []
z11 = []
z12 = []
z21 = []
z22 = []
a = []
b = []
a111 = []
a112 = []
a113 = []
a114 = []
a11 = []
a211 = []
a212 = []
a213 = []
a214 = []
a21 = []
b121 = []
b122 = []
b123 = []
b124 = []
b12 = []
b221 = []
b222 = []
b223 = []
b224 = []
b22 = []

for t in range(times):
    x11.append(np.random.rand())
    x21.append(np.random.rand())
    x12.append(np.random.rand())
    x22.append(np.random.rand())
    y11.append(np.random.rand())
    y21.append(np.random.rand())
    y12.append(np.random.rand())
    y22.append(np.random.rand())
    z11.append(np.abs(x11[t] - y11[t]) + np.abs(x12[t] - y12[t]))
    z21.append(np.abs(x21[t] - y11[t]) + np.abs(x22[t] - y12[t]))
    z12.append(np.abs(x11[t] - y21[t]) + np.abs(x12[t] - y22[t]))
    z22.append(np.abs(x21[t] - y21[t]) + np.abs(x22[t] - y22[t]))

    a.append(z11[t] < z21[t])
    b.append(z22[t] < z12[t])

    a111.append(x11[t] > y11[t] and x12[t] > y12[t])
    a112.append(x11[t] < y11[t] and x12[t] < y12[t])
    a113.append(x11[t] > y11[t] and x12[t] < y12[t])
    a114.append(x11[t] < y11[t] and x12[t] > y12[t])

    a211.append(x21[t] > y11[t] and x22[t] > y12[t])
    a212.append(x21[t] < y11[t] and x22[t] < y12[t])
    a213.append(x21[t] > y11[t] and x22[t] < y12[t])
    a214.append(x21[t] < y11[t] and x22[t] > y12[t])

    b121.append(x21[t] > y21[t] and x22[t] > y22[t])
    b122.append(x21[t] < y21[t] and x22[t] < y22[t])
    b123.append(x21[t] > y21[t] and x22[t] < y22[t])
    b124.append(x21[t] < y21[t] and x22[t] > y22[t])

    b221.append(x11[t] > y21[t] and x12[t] > y22[t])
    b222.append(x11[t] < y21[t] and x12[t] < y22[t])
    b223.append(x11[t] > y21[t] and x12[t] < y22[t])
    b224.append(x11[t] < y21[t] and x12[t] > y22[t])

    a11.append([a111[t], a112[t], a113[t], a114[t]])
    a21.append([a211[t], a212[t], a213[t], a214[t]])
    b12.append([b121[t], b122[t], b123[t], b124[t]])
    b22.append([b221[t], b222[t], b223[t], b224[t]])

p = []
for i in range(len(bools)):
    matches = 0

    for t in range(times):
        flag = True
        if a[t] and b[t]:
            for j in range(len(bools[i])):
                if j == 0:
                    flag = flag and a11[t][bools[i][j]]
                if j == 1:
                    flag = flag and a21[t][bools[i][j]]
                if j == 2:
                    flag = flag and b12[t][bools[i][j]]
                if j == 3:
                    flag = flag and b22[t][bools[i][j]]
            if flag:
                matches += 1
    if matches != 0:
        print(i, bools[i], "%.8f" % (matches / times))
        p.append(matches / times)
        prob += matches / times
print(prob * 2)
p1 = 0
p2 = 0
p3 = 0
p4 = 0
p5 = 0
p6 = 0
p7 = 0
p8 = 0
p9 = 0
p10 = 0
for i in range(len(p)):
    if 0.00020 > p[i] and p[i] > 0.00015:
        p1 += 1
    elif 0.00032 > p[i] and p[i] > 0.00029:
        p2 += 1
    elif 0.00038 > p[i] and p[i] > 0.00034:
        p3 += 1
    elif 0.00046 > p[i] and p[i] > 0.00041:
        p4 += 1
    elif 0.0009 > p[i] and p[i] > 0.0008:
        p5 += 1
    elif 0.0015 > p[i] and p[i] > 0.0013:
        p6 += 1
    elif 0.0018 > p[i] and p[i] > 0.0017:
        p7 += 1
    elif 0.0022 > p[i] and p[i] > 0.0021:
        p8 += 1
    elif 0.0029 > p[i] and p[i] > 0.0025:
        p9 += 1
    elif 0.0036 > p[i] and p[i] > 0.0032:
        p10 += 1
    else:
        print(p[i])
print("p1", p1)
print("p2", p2)
print("p3", p3)
print("p4", p4)
print("p5", p5)
print("p6", p6)
print("p7", p7)
print("p8", p8)
print("p9", p9)
print("p10", p10)

# 0 [0, 0, 0, 1] 0.00086470
# 1 [0, 0, 0, 2] 0.00270940
# 2 [0, 0, 0, 3] 0.00274620
# 3 [0, 0, 1, 1] 0.00347520
# 4 [0, 0, 1, 2] 0.00037280
# 5 [0, 0, 1, 3] 0.00037740
# 6 [0, 0, 2, 1] 0.00172050
# 7 [0, 0, 2, 2] 0.00346180
# 8 [0, 0, 2, 3] 0.00042480
# 9 [0, 0, 3, 1] 0.00172520
# 10 [0, 0, 3, 2] 0.00043210
# 11 [0, 0, 3, 3] 0.00345800
# 12 [0, 1, 0, 0] 0.00086620
# 13 [0, 1, 1, 0] 0.00171300
# 14 [0, 1, 1, 2] 0.00031130
# 15 [0, 1, 1, 3] 0.00031620
# 16 [0, 1, 2, 0] 0.00141730
# 17 [0, 1, 2, 2] 0.00043240
# 18 [0, 1, 3, 0] 0.00143070
# 19 [0, 1, 3, 3] 0.00043490
# 20 [0, 2, 0, 0] 0.00277710
# 21 [0, 2, 0, 3] 0.00136490
# 22 [0, 2, 1, 0] 0.00031870
# 23 [0, 2, 1, 1] 0.00037940
# 24 [0, 2, 1, 3] 0.00211350
# 25 [0, 2, 2, 0] 0.00271660
# 26 [0, 2, 2, 1] 0.00018570
# 27 [0, 2, 2, 3] 0.00142910
# 28 [0, 2, 3, 0] 0.00018160
# 29 [0, 2, 3, 3] 0.00172620
# 30 [0, 3, 0, 0] 0.00271780
# 31 [0, 3, 0, 2] 0.00135730
# 32 [0, 3, 1, 0] 0.00031770
# 33 [0, 3, 1, 1] 0.00037450
# 34 [0, 3, 1, 2] 0.00210980
# 35 [0, 3, 2, 0] 0.00018450
# 36 [0, 3, 2, 2] 0.00174480
# 37 [0, 3, 3, 0] 0.00271800
# 38 [0, 3, 3, 1] 0.00018800
# 39 [0, 3, 3, 2] 0.00145240
# 40 [1, 0, 0, 1] 0.00173160
# 41 [1, 0, 0, 2] 0.00031370
# 42 [1, 0, 0, 3] 0.00031650
# 43 [1, 0, 1, 1] 0.00087940
# 44 [1, 0, 2, 1] 0.00142750
# 45 [1, 0, 2, 2] 0.00044210
# 46 [1, 0, 3, 1] 0.00143600
# 47 [1, 0, 3, 3] 0.00043380
# 48 [1, 1, 0, 0] 0.00347220
# 49 [1, 1, 0, 2] 0.00036490
# 50 [1, 1, 0, 3] 0.00036450
# 51 [1, 1, 1, 0] 0.00088300
# 52 [1, 1, 1, 2] 0.00271080
# 53 [1, 1, 1, 3] 0.00272930
# 54 [1, 1, 2, 0] 0.00176140
# 55 [1, 1, 2, 2] 0.00345570
# 56 [1, 1, 2, 3] 0.00042730
# 57 [1, 1, 3, 0] 0.00173270
# 58 [1, 1, 3, 2] 0.00043570
# 59 [1, 1, 3, 3] 0.00346020
# 60 [1, 2, 0, 0] 0.00036360
# 61 [1, 2, 0, 1] 0.00029530
# 62 [1, 2, 0, 3] 0.00211380
# 63 [1, 2, 1, 1] 0.00272680
# 64 [1, 2, 1, 3] 0.00134300
# 65 [1, 2, 2, 0] 0.00018990
# 66 [1, 2, 2, 1] 0.00271200
# 67 [1, 2, 2, 3] 0.00141610
# 68 [1, 2, 3, 1] 0.00017910
# 69 [1, 2, 3, 3] 0.00173170
# 70 [1, 3, 0, 0] 0.00037840
# 71 [1, 3, 0, 1] 0.00030090
# 72 [1, 3, 0, 2] 0.00212110
# 73 [1, 3, 1, 1] 0.00274310
# 74 [1, 3, 1, 2] 0.00136120
# 75 [1, 3, 2, 1] 0.00018380
# 76 [1, 3, 2, 2] 0.00172910
# 77 [1, 3, 3, 0] 0.00018680
# 78 [1, 3, 3, 1] 0.00274090
# 79 [1, 3, 3, 2] 0.00140560
# 80 [2, 0, 0, 1] 0.00143410
# 81 [2, 0, 0, 2] 0.00273160
# 82 [2, 0, 0, 3] 0.00018290
# 83 [2, 0, 1, 1] 0.00174040
# 84 [2, 0, 1, 2] 0.00018310
# 85 [2, 0, 2, 1] 0.00139500
# 86 [2, 0, 2, 2] 0.00273210
# 87 [2, 0, 3, 1] 0.00210190
# 88 [2, 0, 3, 2] 0.00031360
# 89 [2, 0, 3, 3] 0.00036820
# 90 [2, 1, 0, 0] 0.00173810
# 91 [2, 1, 0, 2] 0.00019300
# 92 [2, 1, 1, 0] 0.00143040
# 93 [2, 1, 1, 2] 0.00272720
# 94 [2, 1, 1, 3] 0.00018440
# 95 [2, 1, 2, 0] 0.00136200
# 96 [2, 1, 2, 2] 0.00273450
# 97 [2, 1, 3, 0] 0.00213460
# 98 [2, 1, 3, 2] 0.00030850
# 99 [2, 1, 3, 3] 0.00037940
# 100 [2, 2, 0, 0] 0.00348430
# 101 [2, 2, 0, 1] 0.00043370
# 102 [2, 2, 0, 3] 0.00174510
# 103 [2, 2, 1, 0] 0.00043570
# 104 [2, 2, 1, 1] 0.00349010
# 105 [2, 2, 1, 3] 0.00174110
# 106 [2, 2, 2, 0] 0.00274070
# 107 [2, 2, 2, 1] 0.00271780
# 108 [2, 2, 2, 3] 0.00087950
# 109 [2, 2, 3, 0] 0.00036580
# 110 [2, 2, 3, 1] 0.00037580
# 111 [2, 2, 3, 3] 0.00346120
# 112 [2, 3, 0, 0] 0.00043890
# 113 [2, 3, 0, 2] 0.00142510
# 114 [2, 3, 1, 1] 0.00044000
# 115 [2, 3, 1, 2] 0.00140950
# 116 [2, 3, 2, 2] 0.00087350
# 117 [2, 3, 3, 0] 0.00029890
# 118 [2, 3, 3, 1] 0.00030920
# 119 [2, 3, 3, 2] 0.00173660
# 120 [3, 0, 0, 1] 0.00142730
# 121 [3, 0, 0, 2] 0.00018340
# 122 [3, 0, 0, 3] 0.00271230
# 123 [3, 0, 1, 1] 0.00170500
# 124 [3, 0, 1, 3] 0.00018780
# 125 [3, 0, 2, 1] 0.00211990
# 126 [3, 0, 2, 2] 0.00036610
# 127 [3, 0, 2, 3] 0.00031620
# 128 [3, 0, 3, 1] 0.00135550
# 129 [3, 0, 3, 3] 0.00270160
# 130 [3, 1, 0, 0] 0.00174340
# 131 [3, 1, 0, 3] 0.00018490
# 132 [3, 1, 1, 0] 0.00143480
# 133 [3, 1, 1, 2] 0.00018780
# 134 [3, 1, 1, 3] 0.00271300
# 135 [3, 1, 2, 0] 0.00210910
# 136 [3, 1, 2, 2] 0.00037050
# 137 [3, 1, 2, 3] 0.00031410
# 138 [3, 1, 3, 0] 0.00136860
# 139 [3, 1, 3, 3] 0.00274460
# 140 [3, 2, 0, 0] 0.00043230
# 141 [3, 2, 0, 3] 0.00143390
# 142 [3, 2, 1, 1] 0.00043150
# 143 [3, 2, 1, 3] 0.00141040
# 144 [3, 2, 2, 0] 0.00031550
# 145 [3, 2, 2, 1] 0.00031000
# 146 [3, 2, 2, 3] 0.00173420
# 147 [3, 2, 3, 3] 0.00088420
# 148 [3, 3, 0, 0] 0.00345360
# 149 [3, 3, 0, 1] 0.00044180
# 150 [3, 3, 0, 2] 0.00172770
# 151 [3, 3, 1, 0] 0.00043970
# 152 [3, 3, 1, 1] 0.00349260
# 153 [3, 3, 1, 2] 0.00174630
# 154 [3, 3, 2, 0] 0.00037150
# 155 [3, 3, 2, 1] 0.00036250
# 156 [3, 3, 2, 2] 0.00345320
# 157 [3, 3, 3, 0] 0.00272830
# 158 [3, 3, 3, 1] 0.00272470
# 159 [3, 3, 3, 2] 0.00086100
# 0.44045299999999993
